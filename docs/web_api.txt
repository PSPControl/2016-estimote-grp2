
Part of an url wrapped in {} stands for variable. Inside {} variable name and its type are separated with :.
If a url variable declared with {} is wrapped in [] it is optional. No optional parameter can be excluded 
if a latter parameter is wished to be defined.

api url: http://www.example.com/index.php/api


	{api url}/beaconvalues/{device_id:UUID}/[{temperature:FLOAT}]/[{brightness:FLOAT}]/[{pressure:FLOAT}]
		Allows to store beacon measurement values to database.

	{api url}/beaconconfig/{device_id:UUID}/{song_id:INT}/{background_id:INT}
		Allows to configure beacon device bound values.

	{api url}/songs
		Returns a JSON ARRAY containing all songs available in this service.
		The JSON is an array containing objects in following format:
			{
				"id":"1",
				"name":"Sandstorm",
				"artist":"Darude"
			}

	{api url}/backgrounds
		Returns a JSON OBJECT containing all backgrounds available in this service. 
		The JSON is an object has two container objects, one for common information 
		about the backgrounds and one for background specific information. Common info 
		has the public path for the backgrounds folder, which is relative to application 
		root. Backgrounds is an array of JSON objects which hold background specific 
		information.

		An example response:

		{
			"common": {
				"path": "\/assets\/backgrounds"
			},
			"backgrounds": [
				{
					"id": "1",
					"name": "jaa.jpg",
					"path": "\/"
				}
			]
		}

